<listaDiretivas>					::= diretiva <listaDiretivas> |
										ε

<linguagem>							::= <funcao> /*enquanto lista de tokens não estiver vazia*/
<funcao>							::= <tipo> identificador abre_parenteses <listaArg> fecha_parenteses <statementEscopo>
<tipo>								::= int	|
										float |
										char |
										double |
										void
<listaArg>							::= <arg> |
										virgula <listaArg> |
										ε
<arg>								::= <tipo> identificador |
<declaracao>						::= <tipo> <listaIdentificadores> |
										ε
<listaIdentificadores>				::= identificador |
										identificador virgula <listaIdentificadores>
<statement>							::= <statementFor> |
										<statementWhile> |
										<expressao> ponto_virgula |
										<statementIf> |
										<statementEscopo> |
										<declaracao> |
										<statementDoWhile> |
										return <statementReturn> ponto_virgula |
										break ponto_virgula |
										<switch01> |
										ponto_virgula
<statementFor>						::= for abre_parenteses <expressao> ponto_virgula <expressaoOpcional> ponto_virgula <expressaoOpcional> fecha_parenteses <statement>
<expressaoOpcional>					::= <expressao> |
										ε
<statementWhile>					::= while abre_parenteses <expressao> fecha_parenteses <statement>
<statementDoWhile>					::= do <statementEscopo> while abre_parenteses <expressao> fecha_parenteses
<parteElse>							::= else <statement> |
										ε
<statementReturn>					::= identificador |
										numero |
										literal_simples |
										literal_duplo |
										ε
<statementEscopo>					::= abre_chaves <listaStatement> fecha_chaves
<listaStatement>					::= <statement> <listaStatementLinha>
<listaStatementLinha>				::= <statement> <listaStatementLinha> |
										ε
<expressao>							::= identificador <expressao02> |
										<valorR>
<expressao02>						::= igual <expressao> |
										<comparacao> <expressao> |
										<aritmetica> <expressao> |
										<aritmeticaOperadorDuplicado> |
										<aritmeticaOperadorIgualComposto> <expressao>
<valorR>							::=	<comparacao> <magnitude> <valorRLinha> |
										<magnitude>
<valorRLinha>						::= <comparacao> <magnitude> <valorRLinha> |
										ε
<comparacao>						::= igual_igual|
										menor |
										maior |
										menor_igual |
										maior_igual |
										diferente
<magnitude>							::= <termo> <magnitudeLinha>
<termo>								::= <fator> <termoLinha>
<magnitudeLinha>					::= mais <termo> <magnitudeLinha> |
										menos <termo> <magnitudeLinha> |
										ε
<termoLinha>						::= vezes <fator> <termoLinha> |
										barra <fator> <termoLinha> |
										ε
<fator>								::= abre_parenteses <expressao> fecha_parenteses |
										menos <fator> |
										mais <fator> |
										identificador |
										numero |
										aspas_simples |
										aspas_duplas
<aritmetica>						::= mais |
										menos |
										vezes |
										barra |
<aritmeticaOperadorDuplicado> 		::= mais_mais |
										menos_menos |
										vezes_vezes
<aritmeticaOperadorIgualComposto>	::= mais_igual |
										menos_igual |
										vezes_igual |
										barra_igual
<switch01>							::= switch abre_parenteses	<switch02> fecha_parenteses abre_chaves <listaCase> fecha_chaves
<switch02>							::= numero
										identificador
										aspas_simples
										aspas_duplas 
<listaCase>							::= case <switch02> dois_pontos <listaStatement> <listaCaseLinha>
<listaCaseLinha>					::= case <switch02> dois_pontos <listaStatement> <listaCaseLinha> |
										default dois_pontos <listaStatement> |
										ε
<chamadaFuncao>						::= identificador abre_parenteses <listaArgChamadaFuncao> fecha_parenteses ponto_virgula
<listaArgChamadaFuncao>				::= <switch02> <listaArgChamadaFuncaoLinha> |
										ε
<listaArgChamadaFuncaoLinha>		::= virgula <switch02> <listaArgChamadaFuncaoLinha> |
										ε